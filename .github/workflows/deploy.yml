name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm init -y
          npm install --save-dev html-minifier-terser clean-css-cli terser imagemin-cli

      - name: Build and optimize
        run: |
          # Run custom build script
          chmod +x build.sh
          ./build.sh
          
          # Additional optimizations
          cd dist
          
          # Optimize HTML files
          find . -name "*.html" -type f -exec npx html-minifier-terser \
            --collapse-whitespace \
            --remove-comments \
            --remove-optional-tags \
            --remove-redundant-attributes \
            --remove-script-type-attributes \
            --remove-tag-whitespace \
            --use-short-doctype \
            --minify-css true \
            --minify-js true \
            --output {} {} \;
          
          # Optimize local CSS files if any exist
          find . -name "*.css" -type f -exec npx clean-css-cli -o {} {} \;
          
          # Optimize JS files
          find . -name "*.js" -type f -exec sh -c 'npx terser "$1" --compress --mangle --output "$1"' _ {} \;
          
          # Add cache busting for static assets
          echo "/* Cache version: $(date +%Y%m%d%H%M%S) */" >> style.css 2>/dev/null || true

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: './dist'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2